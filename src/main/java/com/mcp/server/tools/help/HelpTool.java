package com.mcp.server.tools.help;

import com.mcp.server.tools.base.McpTool;
import com.mcp.server.protocol.types.Tool;
import org.springframework.stereotype.Component;

import java.util.*;

/**
 * Herramienta de ayuda del servidor MCP Azure DevOps.
 * 
 * <p>Proporciona informaci√≥n comprensiva sobre las capacidades del servidor,
 * incluyendo contexto espec√≠fico para la estructura organizacional de Sura Colombia.
 * 
 * <p>Esta herramienta incluye:
 * <ul>
 *   <li>Descripci√≥n general del servidor y sus capacidades</li>
 *   <li>Lista completa de herramientas disponibles</li>
 *   <li>Contexto espec√≠fico de Sura (jerarqu√≠a, dominios, nomenclatura)</li>
 *   <li>Ejemplos de uso para consultas b√°sicas y avanzadas</li>
 *   <li>Mejores pr√°cticas para el uso efectivo</li>
 * </ul>
 * 
 * @author MCP Server Team
 * @version 1.0.0
 * @since 1.0.0
 */
@Component
public class HelpTool implements McpTool {
    
    private static final String TOOL_NAME = "get_help";
    private static final String DESCRIPTION = "Obtiene informaci√≥n completa de ayuda sobre el servidor MCP Azure DevOps, incluyendo contexto espec√≠fico para Sura Colombia";
    
    @Override
    public Tool getToolDefinition() {
        return Tool.builder()
                .name(TOOL_NAME)
                .description(DESCRIPTION)
                .inputSchema(Map.of(
                    "type", "object",
                    "properties", Map.of(
                        "section", Map.of(
                            "type", "string",
                            "description", "Secci√≥n espec√≠fica de ayuda (opcional): 'overview', 'tools', 'sura_context', 'examples', 'best_practices'",
                            "enum", List.of("overview", "tools", "sura_context", "examples", "best_practices")
                        )
                    ),
                    "required", List.of(),
                    "additionalProperties", false
                ))
                .build();
    }
    
    @Override
    public Map<String, Object> execute(Map<String, Object> arguments) {
        String section = arguments != null ? (String) arguments.get("section") : null;
        
        StringBuilder helpText = new StringBuilder();
        
        if (section == null) {
            // Mostrar toda la ayuda
            helpText.append(getOverview()).append("\n\n")
                   .append(getToolsHelp()).append("\n\n")
                   .append(getSuraContext()).append("\n\n")
                   .append(getExamples()).append("\n\n")
                   .append(getBestPractices());
        } else {
            // Mostrar secci√≥n espec√≠fica
            switch (section) {
                case "overview":
                    helpText.append(getOverview());
                    break;
                case "tools":
                    helpText.append(getToolsHelp());
                    break;
                case "sura_context":
                    helpText.append(getSuraContext());
                    break;
                case "examples":
                    helpText.append(getExamples());
                    break;
                case "best_practices":
                    helpText.append(getBestPractices());
                    break;
                default:
                    throw new IllegalArgumentException("Secci√≥n no v√°lida: " + section);
            }
        }
        
        // Crear respuesta en formato MCP
        return Map.of(
            "content", List.of(
                Map.of(
                    "type", "text",
                    "text", helpText.toString()
                )
            ),
            "isError", false
        );
    }
    
    private String getOverview() {
        return """
# üöÄ Azure DevOps MCP Server - Gu√≠a Completa

## üìã Descripci√≥n General
Servidor MCP (Model Context Protocol) especializado para Azure DevOps implementado con Spring Boot 3.3.2 y Java 21. 
Proporciona acceso completo a work items, proyectos, equipos e iteraciones a trav√©s de WebSocket y REST API.
Optimizado espec√≠ficamente para la estructura organizacional y metodolog√≠a de Sura Colombia.

## ‚ú® Caracter√≠sticas Principales
- üåê **Protocol MCP 2024-11-05**: Implementaci√≥n completa del protocolo est√°ndar
- üîÑ **WebSocket Communication**: Comunicaci√≥n en tiempo real bidireccional
- üåç **REST API**: Endpoints HTTP para integraci√≥n f√°cil y testing
- üîó **Visual Studio Code**: Configuraci√≥n autom√°tica para VS Code
- ü§ñ **GitHub Copilot**: Integraci√≥n nativa con chat de Copilot
- ‚òï **Java 21 LTS**: Caracter√≠sticas modernas del lenguaje y rendimiento optimizado
- üçÉ **Spring Boot 3.3.2**: Framework robusto con autoconfiguraci√≥n

## ‚úÖ Funcionalidades Azure DevOps
- üìã **Gesti√≥n Completa de Work Items**: Crear, actualizar, consultar y analizar work items
- üîç **Query Avanzado**: Ejecutar consultas WIQL personalizadas con macros
- üìä **An√°lisis de Proyectos**: Ver estructura organizacional y equipos
- üîÑ **Iteraciones y Sprints**: Gesti√≥n de ciclos de desarrollo √°gil
- üèóÔ∏è **Tipos de Work Items**: Soporte para historias, tareas, bugs, features y √©picas
- üéØ **Contexto Sura**: Configuraci√≥n especializada para el entorno de Sura Colombia

## üîß Tecnolog√≠as y Stack
- **Java**: 21 LTS con caracter√≠sticas modernas
- **Spring Boot**: 3.3.2 con autoconfiguraci√≥n
- **Azure DevOps API**: v7.1 con JSON Patch (RFC 6902)
- **WebSocket**: Comunicaci√≥n en tiempo real
- **JSON-RPC**: Protocolo de comunicaci√≥n MCP
- **Maven/Gradle**: Gesti√≥n de dependencias y build
- **JUnit 5**: Testing unitario y de integraci√≥n

## üåê Protocolo y Configuraci√≥n
- **Protocolo MCP**: 2024-11-05 (JSON-RPC 2.0)
- **Azure DevOps API**: v7.1 REST API
- **Autenticaci√≥n**: Personal Access Token (PAT) con scope vso.work_write
- **Organizaci√≥n**: sura (Azure DevOps)
- **Content-Type**: application/json-patch+json (JSON Patch RFC 6902)
- **Formato**: Array de operaciones JSON Patch para create/update""";
    }
    
    private String getToolsHelp() {
        return """
# üõ†Ô∏è Herramientas Disponibles (12 herramientas)

## üìã Gesti√≥n de Proyectos y Organizacional
- **list_projects**: Lista todos los proyectos disponibles en la organizaci√≥n
  - Retorna: ID, nombre, descripci√≥n, estado, visibilidad
  - √ötil para: Explorar estructura organizacional
  
- **list_teams**: Lista equipos de un proyecto espec√≠fico
  - Par√°metros: project (nombre o ID del proyecto)
  - Retorna: ID, nombre, descripci√≥n del equipo
  - √ötil para: Identificar equipos por proyecto

- **list_iterations**: Lista iteraciones/sprints de un equipo con an√°lisis de cadencia
  - Par√°metros: project, team, timeFrame (current/past/future)
  - Retorna: Fechas, estado, an√°lisis de cadencia √°gil
  - √ötil para: Planificaci√≥n y seguimiento de sprints

## üìù Gesti√≥n de Work Items
- **get_workitem**: Obtiene detalles completos de un work item por ID
  - Par√°metros: project, workItemId, fields (opcional), expand (opcional)
  - Retorna: Todos los campos del work item incluyendo custom fields
  - √ötil para: Inspecci√≥n detallada de work items

- **create_workitem**: Crea nuevos work items con JSON Patch API
  - Soporta: Historia, Historia t√©cnica, Tarea, Subtarea, Bug, √âpica, etc.
  - Campos: Todos los campos est√°ndar y personalizados de Sura
  - Relaciones: Soporte completo para jerarqu√≠as padre-hijo
  - Validaci√≥n: Campos obligatorios por tipo seg√∫n configuraci√≥n Sura
  
- **update_workitem**: Actualiza work items existentes
  - Operaciones: Cambio de estado, asignaci√≥n, campos personalizados
  - Formato: JSON Patch operations (RFC 6902)
  - Control de concurrencia: Revisi√≥n opcional para evitar conflictos

- **delete_workitem**: Elimina work items de Azure DevOps
  - Modos: Papelera de reciclaje (por defecto) o eliminaci√≥n permanente
  - Seguridad: Confirmaci√≥n obligatoria para eliminaci√≥n permanente
  - Par√°metros: project, workItemId, destroy (opcional), confirmDestroy (requerido si destroy=true)
  - ‚ö†Ô∏è ADVERTENCIA: destroy=true es IRREVERSIBLE

- **get_assigned_work**: Obtiene work items asignados al usuario actual
  - Filtros: Por estado, tipo, iteraci√≥n
  - Agrupaci√≥n: Por state, type, iteration
  - √ötil para: Planificaci√≥n diaria y seguimiento personal

## üîç Consultas y B√∫squedas Avanzadas
- **query_workitems**: Ejecuta consultas WIQL (Work Item Query Language)
  - Macros soportadas: @Me, @Today, @CurrentIteration, @Project
  - Operaciones: SELECT, WHERE, GROUP BY, ORDER BY
  - L√≠mites: Hasta 50 resultados por defecto (configurable)
  - Incluye detalles completos de work items autom√°ticamente

- **get_workitem_types**: Obtiene todos los tipos de work items de un proyecto
  - Informaci√≥n: Nombre, descripci√≥n, campos disponibles
  - √ötil para: Validar tipos antes de crear work items

## üõ†Ô∏è Utilidades
- **generate_uuid**: Genera UUIDs √∫nicos para identificadores
  - Formato: UUID est√°ndar java.util.UUID
  - √ötil para: Crear identificadores √∫nicos en aplicaciones

- **get_help**: Muestra informaci√≥n de ayuda completa (esta herramienta)
  - Secciones: overview, tools, sura_context, examples, best_practices
  - Contexto: Documentaci√≥n espec√≠fica para Sura Colombia

## üìä Caracter√≠sticas Especiales
- **JSON Patch Support**: Todas las operaciones de creaci√≥n/actualizaci√≥n usan RFC 6902
- **Sura Custom Fields**: Soporte completo para campos personalizados de Sura
- **Work Item Types**: Tipos personalizados en espa√±ol (Historia, Tarea, etc.)
- **Error Handling**: Manejo detallado de errores espec√≠ficos de Azure DevOps
- **Validation**: Validaci√≥n de campos obligatorios por tipo de work item
- **Safe Deletion**: Eliminaci√≥n con papelera de reciclaje y confirmaci√≥n para eliminaci√≥n permanente""";
    }
    
    private String getSuraContext() {
        return """
# üè¢ Contexto Espec√≠fico para Sura Colombia

## üîß Tipos de Work Items Personalizados (OBLIGATORIO USAR EN ESPA√ëOL)

### ‚úÖ Tipos Habilitados en Sura:
1. **Historia** - Funcionalidades de negocio
   - Campo clave: `Tipo de Historia` (Bug, Historia, Plan de pruebas, Plan migraci√≥n de datos, Pruebas automatizadas)
   - Campos obligatorios: Title, State, Description, AcceptanceCriteria, TipoDeHistoria, MigracionDatos, CumplimientoRegulatorio, ControlAutomatico, ID_APM

2. **Historia t√©cnica** - Trabajo t√©cnico, infraestructura, bugs
   - Campo clave: `Tipo de Historia T√©cnica` (Bug, Historia T√©cnica, Plan de pruebas, etc.)
   - Campos obligatorios: Title, State, Description, AcceptanceCriteria, TipoDeHistoriaTecnica, MigracionDatos, CumplimientoRegulatorio, ControlAutomatico, ID_APM

3. **Tarea** - Tareas espec√≠ficas de desarrollo
   - Campo clave: `Tipo de tarea` (Spike, Tarea)
   - Campos obligatorios: Title, State, TipoDeTarea

4. **Subtarea** - Subdivisiones de tareas
   - Campo clave: `Tipo de subtarea` (An√°lisis de impacto, Aprobaci√≥n arquitecto CAI, Pruebas de aceptaci√≥n, etc.)
   - Campos obligatorios: Title, State, TipoDeSubtarea

5. **Bug** - ‚ö†Ô∏è USAR "Historia t√©cnica" CON TIPO "Bug" EN SU LUGAR
6. **Caso de prueba** - Casos de prueba espec√≠ficos
7. **Riesgo** - Gesti√≥n de riesgos del proyecto
8. **Proyecto** - Iniciativas de alto nivel
9. **√âpica** - √âpicas de producto
10. **Revisi√≥n post implantaci√≥n** - Revisiones despu√©s de despliegues

### ‚ùå Tipos Deshabilitados (NO USAR):
- Task ‚Üí Usar **"Tarea"**
- User Story ‚Üí Usar **"Historia"**
- Epic ‚Üí Usar **"√âpica"**
- Issue ‚Üí Usar **"Riesgo"**

## üèóÔ∏è Estructura Organizacional

### Jerarqu√≠a de Work Items:
```
PROYECTO (400+ activos)
‚îú‚îÄ‚îÄ √âPICA/FEATURE (Capacidades de negocio)
‚îú‚îÄ‚îÄ HISTORIA/HISTORIA T√âCNICA (Requerimientos funcionales)
‚îú‚îÄ‚îÄ TAREA (Actividades espec√≠ficas)
‚îú‚îÄ‚îÄ SUBTAREA (Subdivisiones de tareas)
‚îú‚îÄ‚îÄ BUG (como Historia t√©cnica con tipo Bug)
‚îî‚îÄ‚îÄ CASO DE PRUEBA (Validaciones de calidad)
```

### Dominios de Negocio:
- **do-asegur-**: Aseguramiento (p√≥lizas, reclamaciones, suscripci√≥n, ARL)
- **egv-salud-**: Salud (PAC, atenci√≥n virtual, inclusi√≥n asegurados)
- **do-prestacion_distribucion-**: Prestaci√≥n (salud en casa, medicamentos)
- **do-acceso_clientes-**: Acceso (portales, canales masivos, sostenibilidad)
- **do-infraestructura-**: Infraestructura (Kyndryl: core, DevOps, SRE, DBA)
- **do-ciencia_analitica-**: Anal√≠tica (BI, IA aplicada, arquitectura)

### Nomenclatura de Proyectos:
- **[PETID] + a√±o**: Proyectos con identificador formal
- **[NO PETID] + a√±o**: Proyectos sin identificador espec√≠fico
- **Archivar-**: Proyectos en proceso de cierre
- **H_1_2025, T2 2025**: Hitos y trimestres espec√≠ficos

### Estructura de Equipos (100+ equipos):
- **Prefijo "do-"**: Dominios operativos
- **Prefijo "egv-"**: Evoluci√≥n y gobierno
- **Prefijo "t-"**: Equipos transversales
- **Prefijo "mod-"**: Modificaciones operativas
- **Sufijo "inactivo-"**: Equipos deshabilitados

## üè¢ Jerarqu√≠a de Proyectos en Sura (ACTUALIZADA 2025)

### Estructura de Proyectos (3 niveles principales):

#### 1. **Gerencia_Tecnologia** (Proyecto Principal)
- **ID**: 985807ad-7ff9-438d-849c-794c9bbc50f4
- **Descripci√≥n**: Agrupa todos los proyectos de desarrollo
- **Equipos**: 100+ equipos activos
- **Work Items Activos**: 400+ proyectos de alto nivel
- **Dominios incluidos**:
  - `do-asegur-*`: Aseguramiento y p√≥lizas
  - `do-prestacion_distribucion-*`: Prestaci√≥n y distribuci√≥n
  - `do-acceso_clientes-*`: Acceso de clientes
  - `do-infraestructura-*`: Infraestructura (Kyndryl)
  - `do-ciencia_analitica-*`: Anal√≠tica e IA
  - `egv-salud-*`: Evoluci√≥n en salud
  - `t-*`: Equipos transversales

#### 2. **Gerencia_Tecnologia_Egv_Aseguramiento** (Especializado)
- **ID**: d4897a90-a850-48a6-8dd2-be1a1742067a
- **Descripci√≥n**: Agrupa los proyectos de aseguramiento
- **Equipos**: 74+ equipos especializados
- **Enfoque**: Evoluci√≥n y gobierno de aseguramiento
- **Dominios incluidos**:
  - `egv-asegur-*`: Evoluci√≥n de aseguramiento
  - `do-asegur-*`: Desarrollo operativo de aseguramiento
  - `t-core_*`: Equipos transversales del core

#### 3. **Portafolios** (Iniciativas Estrat√©gicas)
- **ID**: 4261b86e-ac42-449b-a360-113821717ccf
- **Descripci√≥n**: Proyecto que agrupa las iniciativas de los portafolios
- **Equipos**: 100+ equipos de iniciativas
- **Enfoque**: Nuevos desarrollos y modernizaci√≥n
- **Dominios incluidos**:
  - `mod-operativo_*`: Modificaciones operativas
  - `dllo-*`: Desarrollo de nuevos productos
  - `alianza-ecosistemas_*`: Alianzas estrat√©gicas
  - `relev-pers-empr_*`: Relevancia personal empresarial

### üéØ JERARQU√çA DE WORK ITEMS EN SURA (ACTUALIZADA)

#### Nivel 1: **PROYECTO** (M√°s alto - Iniciativas estrat√©gicas)
- **Ejemplo**: "Remediaci√≥n GW - 2025" (ID: 695480)
- **√Årea**: `Gerencia_Tecnologia\\do-asegur-plan_de_remediacion`
- **Prop√≥sito**: Agrupa iniciativas completas de gran envergadura
- **Estados**: New, En progreso, Cerrado, Planeado
- **Duraci√≥n**: T√≠picamente anuales o multi-anuales

#### Nivel 2: **√âPICA/FEATURE** (Capacidades de negocio)
- Agrupa funcionalidades relacionadas
- Duraci√≥n: Trimestral o semestral

#### Nivel 3: **HISTORIA / HISTORIA T√âCNICA** (Requerimientos funcionales)
- **Historia**: Funcionalidades de usuario final
- **Historia t√©cnica**: Trabajo t√©cnico, infraestructura, desarrollo
- Duraci√≥n: Sprint (1-4 semanas)

#### Nivel 4: **TAREA** (Actividades espec√≠ficas)
- Trabajo granular dentro de historias
- Duraci√≥n: D√≠as o una semana

#### Nivel 5: **SUBTAREA** (M√°s granular)
- Subdivisiones de tareas espec√≠ficas
- Duraci√≥n: Horas o d√≠as

### üìÅ ESTRUCTURA DE √ÅREAS ORGANIZACIONALES

#### Patr√≥n de Nomenclatura de √Åreas:
```
Gerencia_Tecnologia\\{dominio}-{funci√≥n}-{iniciativa}
```

**Ejemplo Real**: 
- √Årea: `Gerencia_Tecnologia\\do-asegur-plan_de_remediacion`
- Interpretaci√≥n: dominio_aseguramiento - funci√≥n_aseguramiento - iniciativa_plan_de_remediacion

#### Prefijos de Dominio:
- **do-**: Dominios operativos (desarrollo operativo)
- **egv-**: Evoluci√≥n y gobierno
- **t-**: Transversales
- **mod-**: Modificaciones operativas
- **dllo-**: Desarrollo de nuevos productos

#### Sufijos de Funci√≥n:
- **-asegur-**: Aseguramiento (p√≥lizas, siniestros, suscripci√≥n)
- **-salud-**: Salud (PAC, consultas m√©dicas)
- **-prestacion_distribucion-**: Prestaci√≥n y distribuci√≥n
- **-acceso_clientes-**: Portales y canales
- **-infraestructura-**: Infraestructura tecnol√≥gica
- **-ciencia_analitica-**: Anal√≠tica de datos e IA

### üè∑Ô∏è PATRONES DE NOMENCLATURA DE PROYECTOS

#### Clasificaci√≥n por Tipo de Demanda:
1. **[PETID] + a√±o**: Proyectos con identificador formal en sistema PETID
   - Ejemplo: "[PETID] 2025", "[PETID] H_1_2025"
   - Representan demandas oficiales registradas

2. **[NO PETID] + a√±o**: Proyectos sin identificador espec√≠fico
   - Ejemplo: "[NO PETID] 2025"
   - Proyectos internos o de mantenimiento

3. **Archivar-**: Proyectos en proceso de cierre o archivados
   - Ejemplo: "Archivar-[PETID] 2025"
   - Estado transitorio antes del cierre definitivo

#### Indicadores Temporales:
- **H_1_2025**: Hito 1 del a√±o 2025
- **T2 2025, T3 2025, T4 2025**: Trimestre espec√≠fico
- **Q1 2025, Q2 2025**: Quarter espec√≠fico
- **Sprint X**: Iteraciones espec√≠ficas de desarrollo

#### Proyectos Tem√°ticos (Ejemplos Reales):
- **"Remediaci√≥n GW - 2025"**: Plan de remediaci√≥n de Guidewire
- **"Sostenibilidad de dominio"**: Iniciativas de sostenibilidad
- **"Demandas cruzadas 2025"**: Demandas entre m√∫ltiples dominios
- **"PILAR DE GESTI√ìN DEL CONOCIMIENTO"**: Gesti√≥n del conocimiento organizacional
- **"Transformaci√≥n Plan Vive"**: Transformaci√≥n digital del Plan Vive
- **"IFRS17 - FeniX"**: Implementaci√≥n de normativas contables

### üîç C√≥mo Determinar a Qu√© Proyectos Pertenezco

Para identificar los proyectos donde tienes acceso, usa estas herramientas:

1. **Lista todos los proyectos disponibles**:
   ```
   azuredevops_list_projects
   ```
   - Muestra los 3 proyectos principales de Sura
   - Solo ver√°s proyectos donde tengas permisos

2. **Lista equipos de un proyecto espec√≠fico**:
   ```
   azuredevops_list_teams project="Gerencia_Tecnologia"
   ```
   - Muestra todos los equipos donde puedes trabajar
   - Solo aparecen equipos con permisos de acceso

3. **Consulta tu trabajo asignado**:
   ```
   azuredevops_get_assigned_work project="Gerencia_Tecnologia"
   ```
   - Lista work items asignados a tu usuario
   - Indica autom√°ticamente los proyectos activos

### üìä Distribuci√≥n por Dominio de Negocio

| Prefijo | Dominio | Proyecto Principal | Ejemplos de Equipos |
|---------|---------|-------------------|---------------------|
| `do-asegur-` | Aseguramiento | Gerencia_Tecnologia | P√≥lizas, Reclamaciones, ARL |
| `egv-asegur-` | Evoluci√≥n Aseguramiento | Gerencia_Tecnologia_Egv_Aseguramiento | OIPA, Kinesis, Reaseguro |
| `do-prestacion-` | Prestaci√≥n | Gerencia_Tecnologia | Salud en casa, Medicamentos |
| `do-acceso-` | Acceso Clientes | Gerencia_Tecnologia | Portales, Canales masivos |
| `mod-operativo-` | Modificaciones | Portafolios | IFRS17, Core, Nuevos modelos |
| `dllo-` | Desarrollo | Portafolios | Nuevos productos, Canales |

## ‚öôÔ∏è Metodolog√≠a √Ågil y Iteraciones
- **Sprints**: Trimestrales (Q1, Q2, Q3, Q4)
- **Iteraciones**: Por d√≠as h√°biles [11 d√≠as h√°biles]
- **Jerarqu√≠a**: Gerencia_Tecnologia > A√±o > Sprint
- **Estados**: New ‚Üí Active ‚Üí Resolved ‚Üí Closed

## üìã Campos Obligatorios por Tipo

### Campos Universales (TODOS los tipos):
- **System.Title** - T√≠tulo descriptivo
- **System.State** - Estado del work item (New por defecto)
- **System.AreaPath** - Ruta de √°rea (dominio de negocio)
- **System.IterationPath** - Ruta de iteraci√≥n (sprint)

### Campos Espec√≠ficos Sura:
- **ID de la soluci√≥n en el APM**: Campo Custom.9fcf5e7b-aac8-44a0-9476-653d3ea45e14 (valor num√©rico, ej: 448)
- **Migraci√≥n de datos**: Custom.MigracionDatos (Si/No)
- **Cumplimiento regulatorio**: Custom.CumplimientoRegulatorio (Si/No)
- **Control autom√°tico**: Custom.ControlAutomatico (Si/No)

## üîß Azure DevOps API - Formato JSON Patch

### Estructura Obligatoria (RFC 6902):
```json
[
  {
    "op": "add",
    "path": "/fields/System.Title",
    "value": "T√≠tulo del work item"
  },
  {
    "op": "add", 
    "path": "/fields/Custom.TipoDeHistoria",
    "value": "Historia"
  }
]
```

### Content-Type Requerido:
- **OBLIGATORIO**: `application/json-patch+json`
- **NO usar**: `application/json`

### Relaciones Padre-Hijo:
```json
{
  "op": "add",
  "path": "/relations/-", 
  "value": {
    "rel": "System.LinkTypes.Hierarchy-Reverse",
    "url": "https://dev.azure.com/sura/_apis/wit/workItems/{parentId}"
  }
}
```""";
    }
    
    private String getExamples() {
        return """
# üìö Ejemplos de Uso

## üîç Consultas B√°sicas
```
# Listar todos los proyectos
list_projects

# Ver equipos de Gerencia_Tecnologia
list_teams(project: "Gerencia_Tecnologia")

# Ver work item espec√≠fico
get_workitem(project: "Gerencia_Tecnologia", workItemId: 695480)

# Obtener mis tareas asignadas
get_assigned_work(project: "Gerencia_Tecnologia")

# Ver tipos de work items disponibles
get_workitem_types(project: "Gerencia_Tecnologia")

# Iteraciones del equipo 
list_iterations(project: "Gerencia_Tecnologia", team: "do-asegur-arl")
```

## üìù Creaci√≥n de Work Items (Formato Sura)

### Crear Historia de Negocio:
```json
create_workitem({
  "project": "Gerencia_Tecnologia",
  "type": "Historia",
  "title": "Como usuario quiero poder consultar mis p√≥lizas",
  "description": "Descripci√≥n detallada de la funcionalidad",
  "acceptanceCriteria": "Criterios de aceptaci√≥n espec√≠ficos",
  "tipoHistoria": "Historia",
  "migracionDatos": false,
  "cumplimientoRegulatorio": true,
  "controlAutomatico": false,
  "idSolucionAPM": "448",
  "assignedTo": "usuario@sura.com.co",
  "iterationPath": "Gerencia_Tecnologia\\2025\\Sprint 3 Q2 2025",
  "areaPath": "Gerencia_Tecnologia\\do-asegur-arl"
})
```

### Crear Tarea de Desarrollo:
```json
create_workitem({
  "project": "Gerencia_Tecnologia", 
  "type": "Tarea",
  "title": "Implementar endpoint REST para consulta de p√≥lizas",
  "tipoTarea": "Tarea",
  "assignedTo": "desarrollador@sura.com.co",
  "remainingWork": 16,
  "parentId": 695480
})
```

### Crear Bug (usando Historia t√©cnica):
```json
create_workitem({
  "project": "Gerencia_Tecnologia",
  "type": "Historia t√©cnica", 
  "title": "Error en validaci√≥n de campos de p√≥liza",
  "description": "Descripci√≥n del error encontrado",
  "tipoHistoriaTecnica": "Bug",
  "migracionDatos": false,
  "cumplimientoRegulatorio": false,
  "controlAutomatico": true,
  "idSolucionAPM": "448",
  "priority": 1
})
```

## üîç Consultas WIQL Avanzadas

### An√°lisis Organizacional:
```sql
-- Proyectos activos
query_workitems({
  "project": "Gerencia_Tecnologia",
  "query": "SELECT [System.Id], [System.Title], [System.State] FROM WorkItems WHERE [System.WorkItemType] = 'Proyecto' AND [System.State] <> 'Closed'"
})

-- Distribution por dominios  
query_workitems({
  "project": "Gerencia_Tecnologia",
  "query": "SELECT [System.AreaPath], COUNT() FROM WorkItems WHERE [System.WorkItemType] IN ('Historia', 'Historia t√©cnica') GROUP BY [System.AreaPath]"
})
```

### Seguimiento Personal:
```sql
-- Mis work items asignados
query_workitems({
  "project": "Gerencia_Tecnologia", 
  "query": "SELECT [System.Id], [System.Title], [System.State], [System.WorkItemType] FROM WorkItems WHERE [System.AssignedTo] = @Me AND [System.State] <> 'Closed'"
})

-- Work items de la iteraci√≥n actual
query_workitems({
  "project": "Gerencia_Tecnologia",
  "query": "SELECT * FROM WorkItems WHERE [System.IterationPath] UNDER @CurrentIteration"
})
```

### An√°lisis por Dominio:
```sql
-- Proyectos de aseguramiento (ARL)
query_workitems({
  "project": "Gerencia_Tecnologia",
  "query": "SELECT [System.Id], [System.Title] FROM WorkItems WHERE [System.AreaPath] UNDER 'Gerencia_Tecnologia\\do-asegur-arl'"
})

-- Trabajo de Kyndryl (infraestructura)
query_workitems({
  "project": "Gerencia_Tecnologia", 
  "query": "SELECT * FROM WorkItems WHERE [System.AreaPath] CONTAINS 'kyndryl' AND [System.State] = 'Active'"
})

-- An√°lisis trimestral Q2 2025
query_workitems({
  "project": "Gerencia_Tecnologia",
  "query": "SELECT [System.WorkItemType], [System.State], COUNT() FROM WorkItems WHERE [System.IterationPath] CONTAINS 'Q2 2025' GROUP BY [System.WorkItemType], [System.State]"
})
```

### Reportes de Calidad:
```sql
-- Bugs activos por √°rea
query_workitems({
  "project": "Gerencia_Tecnologia",
  "query": "SELECT [System.AreaPath], COUNT() FROM WorkItems WHERE [System.WorkItemType] = 'Historia t√©cnica' AND [Custom.TipoDeHistoriaTecnica] = 'Bug' AND [System.State] <> 'Closed' GROUP BY [System.AreaPath]"
})

-- Items de cumplimiento regulatorio
query_workitems({
  "project": "Gerencia_Tecnologia", 
  "query": "SELECT [System.Id], [System.Title] FROM WorkItems WHERE [Custom.CumplimientoRegulatorio] = 'Si'"
})
```

## üîÑ Actualizaci√≥n de Work Items
```json
# Cambiar estado y asignaci√≥n
update_workitem({
  "project": "Gerencia_Tecnologia",
  "workItemId": 695480,
  "state": "Active", 
  "assignedTo": "nuevo.usuario@sura.com.co",
  "remainingWork": 8
})

# Mover a nueva iteraci√≥n
update_workitem({
  "project": "Gerencia_Tecnologia",
  "workItemId": 695480,
  "iterationPath": "Gerencia_Tecnologia\\2025\\Sprint 4 Q2 2025"
})
```

## üß™ Testing y Validaci√≥n

### Verificar configuraci√≥n:
```json
# Validar conexi√≥n
list_projects

# Verificar tipos disponibles
get_workitem_types(project: "Gerencia_Tecnologia")

# Probar work item existente
get_workitem(project: "Gerencia_Tecnologia", workItemId: 1)
```

### Crear work item de prueba:
```json
create_workitem({
  "project": "Gerencia_Tecnologia",
  "type": "Tarea",
  "title": "Prueba de creaci√≥n de work item",
  "tipoTarea": "Tarea"
})
```""";
    }
    
    private String getBestPractices() {
        return """
# üéØ Mejores Pr√°cticas

## ‚úÖ Consultas Eficientes y Rendimiento
- **Usar WIQL para an√°lisis complejos**: En lugar de m√∫ltiples llamadas individuales
- **Limitar resultados**: Usar maxResults para evitar timeouts en proyectos grandes  
- **Utilizar macros din√°micas**: @Me, @Today, @CurrentIteration para consultas reutilizables
- **Filtrar por estado**: Incluir [System.State] para excluir work items cerrados
- **Campos espec√≠ficos**: Usar SELECT con campos espec√≠ficos en lugar de SELECT *
- **Paginar resultados**: Para conjuntos de datos grandes usar maxResults apropiados

## üèóÔ∏è Estructura Organizacional Sura
- **Respetar jerarqu√≠a**: Proyecto > √âpica > Historia/Historia t√©cnica > Tarea > Subtarea
- **Nomenclatura est√°ndar**: Usar prefijos correctos (do-, egv-, t-, mod-) seg√∫n dominios
- **Contexto temporal**: Considerar Q1/Q2/Q3/Q4 en iteraciones y planificaci√≥n
- **AreaPath por dominio**: Usar estructura de √°rea seg√∫n dominio de negocio
- **Estados consistentes**: Seguir flujo New ‚Üí Active ‚Üí Resolved ‚Üí Closed

## ÔøΩ Gesti√≥n de Work Items
- **Tipos en espa√±ol**: OBLIGATORIO usar "Historia", "Tarea", etc. (no Task, User Story)
- **Campos obligatorios**: Validar todos los campos requeridos por tipo antes de crear
- **IterationPath completo**: Incluir ruta completa al crear work items
- **AreaPath apropiado**: Asignar seg√∫n dominio de negocio correspondiente
- **Tags descriptivos**: Usar para categorizaci√≥n adicional (urgent, bug-fix, etc.)
- **Emails corporativos**: Mantener consistencia en assignedTo con @sura.com.co

## üîß Creaci√≥n y Actualizaci√≥n
- **JSON Patch obligatorio**: Usar format RFC 6902 para create/update
- **Content-Type correcto**: Siempre usar 'application/json-patch+json'
- **Validaci√≥n por tipo**: Verificar campos espec√≠ficos seg√∫n tipo de work item
- **Relaciones padre-hijo**: Usar parentId para jerarqu√≠as autom√°ticas
- **Campos Sura**: Incluir campos personalizados (ID APM, migraci√≥n datos, etc.)
- **Control de concurrencia**: Usar revision para updates seguros

## üè¢ Trabajando con Proyectos Sura

### Identificar Mis Proyectos:
```bash
# 1. Listar todos los proyectos disponibles
list_projects()

# 2. Ver equipos de proyecto principal
list_teams(project: "Gerencia_Tecnologia")

# 3. Consultar mi trabajo asignado por proyecto
get_assigned_work(project: "Gerencia_Tecnologia")
get_assigned_work(project: "Gerencia_Tecnologia_Egv_Aseguramiento")  
get_assigned_work(project: "Portafolios")
```

### Determinar el Proyecto Correcto para un Work Item:
- **Desarrollo operativo** ‚Üí `Gerencia_Tecnologia`
- **Evoluci√≥n de aseguramiento** ‚Üí `Gerencia_Tecnologia_Egv_Aseguramiento`
- **Nuevas iniciativas/portafolios** ‚Üí `Portafolios`

### Consultas Cross-Proyecto:
```sql
# Buscar trabajo asignado en todos mis proyectos
SELECT [System.Id], [System.Title], [System.TeamProject]
FROM WorkItems
WHERE [System.AssignedTo] = @Me
AND [System.State] <> 'Closed'
```

### üéØ Prompt: "¬øA qu√© proyectos pertenezco?"

Para determinar tus proyectos de pertenencia, sigue esta secuencia:

1. **Lista proyectos disponibles**:
   ```
   azuredevops_list_projects
   ```

2. **Verifica trabajo asignado por proyecto**:
   ```
   azuredevops_query_workitems({
     "project": "Gerencia_Tecnologia",
     "query": "SELECT [System.Id], [System.Title], [System.State], [System.WorkItemType] FROM WorkItems WHERE [System.AssignedTo] = @Me",
     "maxResults": 10
   })
   ```
   Repetir para: `Gerencia_Tecnologia_Egv_Aseguramiento` y `Portafolios`

3. **Analiza trabajo activo**:
   ```
   azuredevops_query_workitems({
     "project": "PROYECTO_PRINCIPAL",
     "query": "SELECT [System.Id], [System.Title], [System.State] FROM WorkItems WHERE [System.AssignedTo] = @Me AND [System.State] <> 'Cerrado'",
     "maxResults": 20
   })
   ```

**Criterios de pertenencia**:
- ‚úÖ **Acceso Activo**: Work items asignados (especialmente no cerrados)
- üìã **Acceso Hist√≥rico**: Solo work items cerrados
- ‚ùå **Sin Acceso**: No aparecen work items

**Indicadores de tu rol**:
- **Cantidad de work items** por proyecto
- **Tipos de trabajo**: Historia, Tarea, Feature, etc.
- **√Åreas de negocio**: System.AreaPath (do-*, egv-*, t-*)
- **Proyecto principal**: Donde tienes m√°s actividad

## üîç An√°lisis y Reportes
- **Agrupar por AreaPath**: Para an√°lisis por dominio de negocio
- **Filtrar por WorkItemType**: Para an√°lisis espec√≠ficos por tipo
- **Usar ChangedDate**: Para seguimiento temporal y tendencias
- **Combinar State + IterationPath**: Para seguimiento √°gil efectivo
- **Macros en consultas**: Aprovechar @CurrentIteration para reportes din√°micos

## ‚ö†Ô∏è Consideraciones de Seguridad y Permisos
- **PAT con scope correcto**: Usar vso.work_write para operaciones de escritura
- **Validar permisos**: Verificar acceso a proyectos antes de operaciones
- **Datos sensibles**: No incluir informaci√≥n confidencial en t√≠tulos/descripciones
- **Logs seguros**: Evitar logging de tokens o informaci√≥n personal

## üéõÔ∏è Configuraci√≥n y Entorno
- **Variables de entorno**: AZURE_DEVOPS_ORGANIZATION y AZURE_DEVOPS_PAT correctas
- **Timeouts apropiados**: Configurar timeouts seg√∫n red corporativa
- **Cache inteligente**: Cachear informaci√≥n de proyectos/equipos para uso repetitivo
- **Error handling**: Implementar manejo robusto de errores espec√≠ficos Azure DevOps

## üìä Monitoreo y Troubleshooting
- **Logs detallados**: Activar DEBUG para investigaci√≥n de problemas
- **Response codes**: Monitorear 400, 401, 403, 404 para identificar patrones
- **Rate limiting**: Respetar l√≠mites de Azure DevOps API
- **Network issues**: Considerar proxy/firewall corporativo en troubleshooting

## üöÄ Arquitectura del Servidor MCP

### Stack Tecnol√≥gico:
- **Java 21 LTS**: Aprovechar caracter√≠sticas modernas (pattern matching, records)
- **Spring Boot 3.3.2**: Configuraci√≥n autom√°tica y gesti√≥n de dependencias
- **WebSocket**: Para comunicaci√≥n en tiempo real con VS Code
- **JSON-RPC 2.0**: Protocolo est√°ndar MCP para interoperabilidad
- **Maven/Gradle**: Gesti√≥n de dependencias y build reproducible

### Patrones de Dise√±o Implementados:
- **Builder Pattern**: Para construcci√≥n de objetos complejos (Tool, McpResponse)
- **Strategy Pattern**: Diferentes herramientas implementan estrategias espec√≠ficas
- **Factory Pattern**: Creaci√≥n de respuestas success/error
- **Template Method**: Comportamiento com√∫n en McpTool interface

### Extensibilidad:
- **Plugin Architecture**: Nuevas herramientas via @Component sin c√≥digo adicional
- **Configuration Driven**: Configuraci√≥n externa via application.yml
- **Dependency Injection**: Spring IoC para gesti√≥n autom√°tica de dependencias
- **Interface Based**: Extensi√≥n f√°cil mediante interfaces bien definidas

## üìö Referencias y Recursos

### Documentaci√≥n Oficial:
- **Azure DevOps REST API v7.1**: https://docs.microsoft.com/en-us/rest/api/azure/devops/
- **Model Context Protocol**: https://spec.modelcontextprotocol.io/
- **JSON Patch RFC 6902**: https://datatracker.ietf.org/doc/html/rfc6902
- **Spring Boot Reference**: https://docs.spring.io/spring-boot/docs/current/reference/html/

### Gu√≠as del Proyecto:
- **README.md**: Configuraci√≥n completa e instalaci√≥n
- **ARCHITECTURE.md**: Arquitectura detallada del servidor
- **DEVELOPMENT.md**: Gu√≠a de desarrollo y testing
- **JAVA_MCP_GUIDE.md**: Gu√≠a completa de servidores MCP en Java""";
    }
    
    @Override
    public String getName() {
        return TOOL_NAME;
    }
    
    @Override
    public String getDescription() {
        return DESCRIPTION;
    }
}
