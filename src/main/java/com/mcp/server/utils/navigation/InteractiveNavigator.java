package com.mcp.server.utils.navigation;

import com.mcp.server.utils.team.TeamConfigurationManager;

import java.util.List;
import java.util.Map;

/**
 * Navegador interactivo para la jerarqu√≠a de Azure DevOps.
 * 
 * Esta clase se encarga de:
 * - Navegaci√≥n por iteraciones espec√≠ficas
 * - Manejo de preguntas contextuales
 * - Confirmaci√≥n de ubicaciones
 * - An√°lisis espec√≠ficos de iteraciones y contextos
 * 
 * Extra√≠da de DiscoverOrganizationTool como parte del refactoring para mejorar
 * la cohesi√≥n y mantenibilidad del c√≥digo.
 */
public class InteractiveNavigator {
    
    private final TeamConfigurationManager teamConfigurationManager;
    
    public InteractiveNavigator(TeamConfigurationManager teamConfigurationManager) {
        this.teamConfigurationManager = teamConfigurationManager;
    }
    
    /**
     * NIVEL 4: Iteraci√≥n - Navegaci√≥n espec√≠fica por iteraci√≥n
     */
    public Map<String, Object> executeIterationLevel(String projectName, String teamName, String iterationName) {
        StringBuilder result = new StringBuilder();
        result.append("üìÖ **NAVEGACI√ìN POR ITERACI√ìN - PASO 4/5**\n");
        result.append("========================================\n\n");
        result.append("üìÇ **Proyecto:** ").append(projectName).append("\n");
        if (teamName != null) {
            result.append("üë• **Equipo:** ").append(teamName).append("\n");
        }
        if (iterationName != null) {
            result.append("üîÑ **Iteraci√≥n:** ").append(iterationName).append("\n");
        }
        result.append("\n");
        
        try {
            // Informaci√≥n espec√≠fica de la iteraci√≥n
            result.append("üìä **INFORMACI√ìN DE LA ITERACI√ìN:**\n");
            result.append("=================================\n");
            result.append(getIterationSummary(projectName, teamName, iterationName));
            result.append("\n");
            
            // Opciones finales de navegaci√≥n
            result.append("üéØ **OPCIONES FINALES:**\n");
            result.append("======================\n");
            
            result.append("**A) Hacer preguntas espec√≠ficas sobre esta iteraci√≥n:**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"question\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) {
                result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            }
            if (iterationName != null) {
                result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            }
            result.append("  questionType: \"[TIPO_DE_PREGUNTA]\"\n");
            result.append(")\n");
            result.append("```\n\n");
            
            result.append("**B) Confirmar que este es el contexto correcto:**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"confirm\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) {
                result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            }
            if (iterationName != null) {
                result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            }
            result.append("  confirmLocation: true\n");
            result.append(")\n");
            result.append("```\n\n");
            
            result.append("**C) Proceder con investigaci√≥n en este contexto (SOLO SI EST√Å SEGURO):**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"investigation\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) {
                result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            }
            if (iterationName != null) {
                result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            }
            result.append("  investigationType: \"[TIPO_DE_INVESTIGACION]\"\n");
            result.append(")\n");
            result.append("```\n\n");
            
            result.append("**Preguntas espec√≠ficas para iteraciones:**\n");
            result.append("- `sprint-capacity`: ¬øCu√°l es la capacidad planificada vs real?\n");
            result.append("- `backlog-health`: ¬øC√≥mo est√° la salud del backlog?\n");
            result.append("- `sprint-patterns`: ¬øQu√© patrones se repiten en los sprints?\n");
            result.append("- `field-usage-stats`: ¬øQu√© campos se usan m√°s en esta iteraci√≥n?\n");
            
        } catch (Exception e) {
            result.append("‚ùå Error analizando iteraci√≥n: ").append(e.getMessage()).append("\n");
        }
        
        return Map.of(
            "content", List.of(Map.of(
                "type", "text",
                "text", result.toString()
            ))
        );
    }
    
    /**
     * NIVEL PREGUNTA: Responde preguntas espec√≠ficas sobre el contexto actual
     */
    public Map<String, Object> executeQuestionMode(String projectName, String teamName, String areaPath, 
                                                    String iterationName, String questionType) {
        StringBuilder result = new StringBuilder();
        result.append("‚ùì **RESPONDIENDO PREGUNTA CONTEXTUAL**\n");
        result.append("====================================\n\n");
        
        result.append("üìç **Contexto:**\n");
        result.append("  üìÇ Proyecto: ").append(projectName).append("\n");
        if (teamName != null) result.append("  üë• Equipo: ").append(teamName).append("\n");
        if (areaPath != null) result.append("  üóÇÔ∏è √Årea: ").append(areaPath).append("\n");
        if (iterationName != null) result.append("  üîÑ Iteraci√≥n: ").append(iterationName).append("\n");
        result.append("  ‚ùì Pregunta: ").append(questionType).append("\n\n");
        
        try {
            result.append("üìä **RESPUESTA:**\n");
            result.append("===============\n");
            
            switch (questionType) {
                case "work-item-distribution":
                    result.append(teamConfigurationManager.analyzeWorkItemDistribution(projectName, teamName, areaPath, iterationName));
                    break;
                case "custom-fields-usage":
                    result.append(analyzeCustomFieldsUsage(projectName, teamName, areaPath, iterationName));
                    break;
                case "team-activity":
                    result.append(teamConfigurationManager.analyzeTeamActivity(projectName, teamName, areaPath, iterationName));
                    break;
                case "field-values-analysis":
                    result.append(analyzeFieldValues(projectName, teamName, areaPath, iterationName));
                    break;
                case "iteration-workload":
                    result.append(analyzeIterationWorkload(projectName, teamName, iterationName));
                    break;
                case "team-velocity":
                    result.append(teamConfigurationManager.analyzeTeamVelocity(projectName, teamName));
                    break;
                case "area-specific-fields":
                    result.append(teamConfigurationManager.analyzeAreaSpecificFields(projectName, areaPath));
                    break;
                case "workflow-patterns":
                    result.append(teamConfigurationManager.analyzeWorkflowPatterns(projectName, teamName, areaPath));
                    break;
                case "backlog-health":
                    result.append(analyzeBacklogHealth(projectName, teamName, iterationName));
                    break;
                case "sprint-patterns":
                    result.append(analyzeSprintPatterns(projectName, teamName));
                    break;
                case "field-usage-stats":
                    result.append(analyzeFieldUsageStats(projectName, teamName, iterationName));
                    break;
                case "hierarchy-analysis":
                    result.append(teamConfigurationManager.analyzeHierarchyPatterns(projectName, teamName, areaPath));
                    break;
                default:
                    result.append("‚ùå Tipo de pregunta no reconocido: ").append(questionType);
            }
            
            result.append("\n\nüéØ **SIGUIENTE PASO:**\n");
            result.append("====================\n");
            result.append("**A) Confirmar que este es el contexto correcto:**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"confirm\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            if (areaPath != null) result.append("  selectedAreaPath: \"").append(areaPath).append("\",\n");
            if (iterationName != null) result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            result.append("  confirmLocation: true\n");
            result.append(")\n");
            result.append("```\n\n");
            
            result.append("**B) Proceder directamente con investigaci√≥n (SOLO SI EST√Å SEGURO):**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"investigation\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            if (areaPath != null) result.append("  selectedAreaPath: \"").append(areaPath).append("\",\n");
            if (iterationName != null) result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            result.append("  investigationType: \"[TIPO_DE_INVESTIGACION]\"\n");
            result.append(")\n");
            result.append("```\n\n");
            
        } catch (Exception e) {
            result.append("‚ùå Error respondiendo pregunta: ").append(e.getMessage()).append("\n");
        }
        
        return Map.of(
            "content", List.of(Map.of(
                "type", "text",
                "text", result.toString()
            ))
        );
    }
    
    /**
     * NIVEL CONFIRMACI√ìN: Confirma la ubicaci√≥n actual antes de proceder
     */
    public Map<String, Object> executeConfirmMode(String projectName, String teamName, String areaPath, 
                                                   String iterationName, Boolean confirmLocation) {
        StringBuilder result = new StringBuilder();
        result.append("‚úÖ **CONFIRMACI√ìN DE UBICACI√ìN - PASO FINAL**\n");
        result.append("==========================================\n\n");
        
        result.append("üìç **UBICACI√ìN ACTUAL:**\n");
        result.append("  üìÇ Proyecto: ").append(projectName).append("\n");
        if (teamName != null) result.append("  üë• Equipo: ").append(teamName).append("\n");
        if (areaPath != null) result.append("  üóÇÔ∏è √Årea: ").append(areaPath).append("\n");
        if (iterationName != null) result.append("  üîÑ Iteraci√≥n: ").append(iterationName).append("\n");
        result.append("  ‚úÖ Confirmaci√≥n: ").append(confirmLocation ? "S√≠" : "No").append("\n\n");
        
        if (confirmLocation) {
            result.append("üéØ **¬°UBICACI√ìN CONFIRMADA!**\n");
            result.append("===========================\n");
            result.append("El usuario ha confirmado que esta es la ubicaci√≥n correcta para comenzar la investigaci√≥n.\n");
            result.append("Ahora puede proceder a generar los archivos YAML de descubrimiento.\n\n");
            
            result.append("üî¨ **OPCIONES DE INVESTIGACI√ìN DISPONIBLES:**\n");
            result.append("===========================================\n");
            result.append("Seleccione el tipo de investigaci√≥n que desea realizar:\n\n");
            
            result.append("**1. An√°lisis de Tipos de Work Items**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"investigation\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            if (areaPath != null) result.append("  selectedAreaPath: \"").append(areaPath).append("\",\n");
            if (iterationName != null) result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            result.append("  investigationType: \"workitem-types\"\n");
            result.append(")\n");
            result.append("```\n");
            result.append("üìù Analiza todos los tipos de work items y sus campos requeridos\n\n");
            
            result.append("**2. An√°lisis de Campos Personalizados**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"investigation\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            if (areaPath != null) result.append("  selectedAreaPath: \"").append(areaPath).append("\",\n");
            if (iterationName != null) result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            result.append("  investigationType: \"custom-fields\"\n");
            result.append(")\n");
            result.append("```\n");
            result.append("üè∑Ô∏è Analiza campos personalizados y sus valores permitidos\n\n");
            
            result.append("**3. An√°lisis de Valores de Picklist**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"investigation\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            if (areaPath != null) result.append("  selectedAreaPath: \"").append(areaPath).append("\",\n");
            if (iterationName != null) result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            result.append("  investigationType: \"picklist-values\"\n");
            result.append(")\n");
            result.append("```\n");
            result.append("üìä Analiza valores de picklist para campos espec√≠ficos\n\n");
            
            result.append("**4. Configuraci√≥n Completa**\n");
            result.append("```\n");
            result.append("azuredevops_discover_organization(\n");
            result.append("  navigationLevel: \"investigation\",\n");
            result.append("  selectedProject: \"").append(projectName).append("\",\n");
            if (teamName != null) result.append("  selectedTeam: \"").append(teamName).append("\",\n");
            if (areaPath != null) result.append("  selectedAreaPath: \"").append(areaPath).append("\",\n");
            if (iterationName != null) result.append("  selectedIteration: \"").append(iterationName).append("\",\n");
            result.append("  investigationType: \"full-configuration\"\n");
            result.append(")\n");
            result.append("```\n");
            result.append("üîß Genera configuraci√≥n completa con todos los elementos anteriores\n\n");
            
        } else {
            result.append("‚ùå **UBICACI√ìN NO CONFIRMADA**\n");
            result.append("============================\n");
            result.append("El usuario ha indicado que esta no es la ubicaci√≥n correcta.\n");
            result.append("Por favor, navegue de nuevo a la ubicaci√≥n deseada utilizando los niveles anteriores.\n\n");
        }
        
        return Map.of(
            "content", List.of(Map.of(
                "type", "text",
                "text", result.toString()
            ))
        );
    }
    
    // M√âTODOS AUXILIARES PARA AN√ÅLISIS
    
    /**
     * Obtiene resumen de iteraci√≥n espec√≠fica
     */
    public String getIterationSummary(String projectName, String teamName, String iterationName) {
        StringBuilder summary = new StringBuilder();
        summary.append("üìÖ Resumen de iteraci√≥n:\n");
        summary.append("   ‚Ä¢ Proyecto: ").append(projectName).append("\n");
        if (teamName != null) summary.append("   ‚Ä¢ Equipo: ").append(teamName).append("\n");
        if (iterationName != null) summary.append("   ‚Ä¢ Iteraci√≥n: ").append(iterationName).append("\n");
        summary.append("   ‚Ä¢ Estado: Contexto preparado para investigaci√≥n\n");
        return summary.toString();
    }
    
    /**
     * Analiza el uso de campos personalizados en el contexto especificado
     */
    public String analyzeCustomFieldsUsage(String projectName, String teamName, String areaPath, String iterationName) {
        return "üè∑Ô∏è An√°lisis de uso de campos personalizados:\n" +
               "   ‚Ä¢ Funcionalidad implementada - mostrar√° campos m√°s utilizados\n" +
               "   ‚Ä¢ Contexto: " + projectName + (teamName != null ? "/" + teamName : "") + "\n";
    }
    
    /**
     * Analiza valores de campos en el contexto especificado
     */
    public String analyzeFieldValues(String projectName, String teamName, String areaPath, String iterationName) {
        return "üîç An√°lisis de valores de campos:\n" +
               "   ‚Ä¢ Funcionalidad implementada - mostrar√° valores m√°s comunes\n" +
               "   ‚Ä¢ Contexto: " + projectName + (teamName != null ? "/" + teamName : "") + "\n";
    }
    
    /**
     * Analiza la carga de trabajo por iteraci√≥n
     */
    public String analyzeIterationWorkload(String projectName, String teamName, String iterationName) {
        return "üìà An√°lisis de carga de trabajo por iteraci√≥n:\n" +
               "   ‚Ä¢ Funcionalidad implementada - mostrar√° distribuci√≥n de trabajo\n" +
               "   ‚Ä¢ Contexto: " + projectName + (teamName != null ? "/" + teamName : "") + "\n";
    }
    
    /**
     * Analiza la salud del backlog
     */
    public String analyzeBacklogHealth(String projectName, String teamName, String iterationName) {
        return "üìã An√°lisis de salud del backlog:\n" +
               "   ‚Ä¢ Funcionalidad implementada - mostrar√° m√©tricas de salud del backlog\n" +
               "   ‚Ä¢ Contexto: " + projectName + (teamName != null ? "/" + teamName : "") + "\n";
    }
    
    /**
     * Analiza patrones de sprint
     */
    public String analyzeSprintPatterns(String projectName, String teamName) {
        return "üîÑ An√°lisis de patrones de sprint:\n" +
               "   ‚Ä¢ Funcionalidad implementada - mostrar√° patrones recurrentes\n" +
               "   ‚Ä¢ Contexto: " + projectName + (teamName != null ? "/" + teamName : "") + "\n";
    }
    
    /**
     * Analiza estad√≠sticas de uso de campos
     */
    public String analyzeFieldUsageStats(String projectName, String teamName, String iterationName) {
        return "üìä Estad√≠sticas de uso de campos:\n" +
               "   ‚Ä¢ Funcionalidad implementada - mostrar√° estad√≠sticas detalladas\n" +
               "   ‚Ä¢ Contexto: " + projectName + (teamName != null ? "/" + teamName : "") + "\n";
    }
}
